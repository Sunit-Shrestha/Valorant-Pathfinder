import pyscreenshot as pss

def findDirection():
    pixels = [[154, 179], [154, 180], [154, 181], [154, 182], [154, 183], [154, 184], [154, 185], 
    [155, 177], [155, 178], [155, 179], [155, 180], [155, 181], [155, 182], [155, 183], [155, 184], 
    [155, 185], [155, 186], [155, 187], [156, 175], [156, 176], [156, 177], [156, 187], [156, 188], 
    [156, 189], [157, 174], [157, 175], [157, 176], [157, 188], [157, 189], [157, 190], [158, 173], 
    [158, 174], [158, 190], [158, 191], [159, 173], [159, 174], [159, 190], [159, 191], [160, 172], 
    [160, 173], [160, 191], [160, 192], [161, 172], [161, 192], [162, 171], [162, 172], [162, 192], 
    [162, 193], [163, 171], [163, 172], [163, 192], [163, 193], [164, 171], [164, 172], [164, 192], 
    [164, 193], [165, 171], [165, 172], [165, 192], [165, 193], [166, 171], [166, 172], [166, 192], 
    [166, 193], [167, 171], [167, 172], [167, 192], [167, 193], [168, 171], [168, 172], [168, 192], 
    [168, 193], [169, 172], [169, 192], [170, 172], [170, 173], [170, 191], [170, 192], [171, 173], 
    [171, 174], [171, 190], [171, 191], [172, 173], [172, 174], [172, 190], [172, 191], [173, 174], 
    [173, 175], [173, 176], [173, 188], [173, 189], [173, 190], [174, 175], [174, 176], [174, 177], 
    [174, 187], [174, 188], [174, 189], [175, 177], [175, 178], [175, 179], [175, 180], [175, 181], 
    [175, 182], [175, 183], [175, 184], [175, 185], [175, 186], [175, 187], [176, 179], [176, 180], 
    [176, 181], [176, 182], [176, 183], [176, 184], [176, 185]]
    screenshot = pss.grab()
    pix = screenshot.load()
    possiblePixel = []
    for pixel in pixels:
        if pix[pixel[0], pixel[1]] == (255,255,164):
            possiblePixel.append(pixel)
    reqdPixel = [0, 0]
    for add in possiblePixel:
        reqdPixel[0] += add[0]
        reqdPixel[1] += add[1]
    reqdPixel[0] = reqdPixel[0]/len(possiblePixel)
    reqdPixel[1] = reqdPixel[1]/len(possiblePixel)
    dirVec = [ reqdPixel[0]-165, reqdPixel[1]-182] 
    directionCosines = [ dirVec[0] / ( dirVec[0]**2 + dirVec[1]**2 ) ** (1/2), 
    dirVec[1] / ( dirVec[0]**2 + dirVec[1]**2 ) ** (1/2)]
    return directionCosines 